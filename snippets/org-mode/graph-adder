# -*- mode: snippet -*-
# name: graph-adder
# uuid:
# key: graph
# condition: t
# --
* graph
** tables

#+name: example-node-table
| *node*     | *label*        | *shape* | *fillcolor* |
|------------+----------------+---------+-------------|
| | | |             |



#+name: example-graph
| from       | to         | label |
|------------+------------+-------|
| | |       |

** connecter
#+name: make-node
#+BEGIN_SRC emacs-lisp :var table=example-node-table graph=example-graph :results output :exports none

(mapcar #'(lambda (x)
              (princ (format "%s [label =\"%s\", shape = \"box\"];\n"
                             (cl-first x) (cl-second x)))) table)

(princ (mapconcat
 (lambda (x)
   (format "%s -> %s;"
           (car x) (nth 1 x) (nth 2 x))) graph "\n"))



#+END_SRC
